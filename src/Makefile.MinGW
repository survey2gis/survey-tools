#############################################################################
#
# PROGRAM:		survey2gis
# FILE:			Makefile.MinGW64
# AUTHOR(S):	Benjamin Ducke for Regierungspraesidium Stuttgart,
#				Landesamt fuer Denkmalpflege
# 				http://www.denkmalpflege-bw.de/
#
# PURPOSE:	 	This is the Makefile for MinGW (-win64).
#           	It is intended to be run straight from the MinGW command line.
#				On a Windows system with MinGW-64, this will by default 
#               produce 64 bit binaries, no matter whether the system itself
#               is running a 32 or 64 bit version of Windows.
#               Set the ARCH_FLAG to "-m32" flag to force
#               production of 32 bit binaries. Also, you may have
#               to set MAKE to "mingw32-make".
#
# COPYRIGHT:	(C) 2011-2018 by the gvSIG Community Edition team
#
#		This program is free software under the GPL (>=v2)
#		Read the file COPYING that comes with this software for details.
#############################################################################

PRG=survey2gis

# For locale codes see: http://www.gnu.org/s/hello/manual/gettext/Locale-Names.html
CUR_LOCALE=de
CUR_DIRNAME=de

# Bundled version of Shapelib
SHAPELIB_DIR=shapelib-1.3.0

# Bundled version of PROJ4
PROJ4_DIR=proj-4.9.3
PROJ4_PREFIX=$(shell pwd)/${PROJ4_DIR}

# Bundled version of SLRE
SLRE_DIR=slre

# Bundled copy of MULTCLIP polygon clipper
MULTCLIP_DIR=multclip

# set ARCH_FLAG to -m32 to force a 32 bit build
# set ARCH_FLAG to -m64 to force a 64 bit build
# ARCH_FLAG=
GCC=gcc
GCC_STRICTNESS=-Wall -fno-common -fexceptions -Wno-unknown-pragmas
#LD_EXTRA_FLAGS=${ARCH_FLAG} -lgcc -lm -lpthread -lintl $(LDFLAGS)
# For dynamic linking (with static libc):
# LD_EXTRA_FLAGS=${ARCH_FLAG} -lm -lpthread -lintl -liconv -static-libgcc $(LDFLAGS) 
# For static linking (all libs):
# LD_EXTRA_FLAGS=${ARCH_FLAG} -lm -lpthread -lintl -liconv -static $(LDFLAGS)
LD_EXTRA_FLAGS=${ARCH_FLAG} -lm -lpthread -lintl -liconv -static-libgcc $(LDFLAGS)
# Note: -D UNICODE and -D _UNICODE are required for UTF-8 encoding on Win32.
GCC_EXTRA_FLAGS=${ARCH_FLAG} -D UNICODE -D _UNICODE ${GCC_STRICTNESS} -fno-builtin-index -fno-builtin-rindex -fno-builtin-qsort -fno-builtin-exit -fno-builtin-strcmp -I/include -I${SHAPELIB_DIR} ${CFLAGS}
TRANSLATIONS=translations
MAKE=make

# i18n settings
I18N_PACKAGE=${PRG}
I18N_LOCALE_DIR=locale

# Want GUI support? Uncomment the following lines and adjust
# the GTK include and library settings to match your system's.
GUI="\#define GUI"

# Do NOT set the -mwindows compiler flag if you want
# to use survey2gis from cmd.exe, with console output.
# If -mwindows is set then there will be no annoying
# black console window, but survey2gis will also not
# be able to output anything to stderr/stdout when 
# run from cmd.exe! 
GUI_FLAGS=-mwindows

# To use pkg-config for GTK2 auto-configuration
# (recommended):
GUI_INC=$(shell pkg-config --cflags gtk+-2.0)
GUI_LIB=$(shell pkg-config --libs gtk+-2.0)

# Want only a CLI client? Then we still need the
# GLIB libs and headers!
#GUI_INC=$(shell pkg-config --cflags glib-2.0)
#GUI_LIB=$(shell pkg-config --libs glib-2.0)

# If pkg-config does not work/exist on your system, then specify
# things manually here:
#GUI_INC=-I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0
#GUI_LIB=-Wl,-luuid -lgtk-win32-2.0 -lgdk-win32-2.0 -limm32 -lshell32 -lole32 -latk-1.0 -lgio-2.0 -lgdk_pixbuf-2.0 -ltiff -ljpeg -lpng -lz -lpangocairo-1.0 -lpangoft2-1.0 -lpangowin32-1.0 -lgdi32 -lfreetype -lfontconfig -lpango-1.0 -lm -lcairo -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl

export GCC
export GCC_EXTRA_FLAGS
export MAKE

all: multclip slre shapelib proj4 ${PRG}
tests: test-platform


#############################################################################

config:
	@ # PROJ.4
	@ echo "Configuring bundled PROJ.4..."
	@ cd ${PROJ4_DIR} ; ./configure -q --prefix=${PROJ4_PREFIX} --enable-shared==no --enable-static=yes --disable-dependency-tracking	
	@ echo "... done."

#############################################################################


#############################################################################

shapelib:
	${MAKE} -C ${SHAPELIB_DIR} 
	
#############################################################################


#############################################################################

proj4:
	@ cd ${PROJ4_DIR} ; ${MAKE}
	@ cd ${PROJ4_DIR} ; ${MAKE} install
	@ cp -R ${PROJ4_DIR}/share/proj ./ 

#############################################################################


#############################################################################

slre: ${SLRE_DIR}/slre.o
	
${SLRE_DIR}/slre.o: ${SLRE_DIR}/slre.c ${SLRE_DIR}/slre.h
	${GCC} -c ${SLRE_DIR}/slre.c -I${SLRE_DIR} -o ${SLRE_DIR}/slre.o

#############################################################################


#############################################################################

multclip: ${MULTCLIP_DIR}/polygon0.o ${MULTCLIP_DIR}/polygon1.o ${MULTCLIP_DIR}/vectmatr.o ${MULTCLIP_DIR}/polyio.o

${MULTCLIP_DIR}/polygon0.o: ${MULTCLIP_DIR}/polygon0.c ${MULTCLIP_DIR}/polyarea.h ${MULTCLIP_DIR}/vectmatr.h
	${GCC} -c ${MULTCLIP_DIR}/polygon0.c -I${MULTCLIP_DIR} -o ${MULTCLIP_DIR}/polygon0.o -lm

${MULTCLIP_DIR}/polygon1.o: ${MULTCLIP_DIR}/polygon1.c ${MULTCLIP_DIR}/polyarea.h ${MULTCLIP_DIR}/vectmatr.h
	${GCC} -c ${MULTCLIP_DIR}/polygon1.c -I${MULTCLIP_DIR} -o ${MULTCLIP_DIR}/polygon1.o -lm

${MULTCLIP_DIR}/vectmatr.o: ${MULTCLIP_DIR}/vectmatr.c ${MULTCLIP_DIR}/vectmatr.h
	${GCC} -c ${MULTCLIP_DIR}/vectmatr.c -I${MULTCLIP_DIR} -o ${MULTCLIP_DIR}/vectmatr.o -lm
	
${MULTCLIP_DIR}/polyio.o: ${MULTCLIP_DIR}/polyio.c ${MULTCLIP_DIR}/polyio.h
	${GCC} -c ${MULTCLIP_DIR}/polyio.c -I${MULTCLIP_DIR} -o ${MULTCLIP_DIR}/polyio.o -lm

#############################################################################


#############################################################################

survey2gis: ${TRANSLATIONS} config.h errors.o export.o geom.o gui_conf.o gui_field.o gui_form.o i18n.o main.o options.o parser.o reproj.o selections.o tools.o
	${GCC} ${GUI_FLAGS} errors.o export.o geom.o gui_field.o gui_conf.o gui_form.o i18n.o main.o options.o parser.o reproj.o selections.o tools.o ${MULTCLIP_DIR}/polygon0.o ${MULTCLIP_DIR}/polygon1.o ${MULTCLIP_DIR}/vectmatr.o ${SLRE_DIR}/slre.o ${SHAPELIB_DIR}/dbfopen.o ${SHAPELIB_DIR}/shpopen.o ${SHAPELIB_DIR}/libshp.a ${PROJ4_DIR}/lib/libproj.a -o ${PRG} ${LD_EXTRA_FLAGS} ${GUI_LIB} ${GCC_EXTRA_FLAGS}

#############################################################################

config: config.h

#############################################################################

config.h:
	@ echo "#ifndef CONFIG_H" > config.h
	@ echo "#define CONFIG_H" >> config.h
	@ echo "#define PACKAGE \"${I18N_PACKAGE}\"" >> config.h
	@ echo "#define LOCALEDIR \"${I18N_LOCALE_DIR}\"" >> config.h
	@ echo "#include \"${SHAPELIB_DIR}/shapefil.h\"" >> config.h
	@ echo "#include \"${PROJ4_DIR}/include/proj_api.h\"" >> config.h
	@ echo "${GUI}" >> config.h
	@ echo "#define MINGW" >> config.h
	@ echo "#endif" >> config.h	

errors.o: errors.c errors.h global.h
	${GCC} -c errors.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

export.o: export.c export.h global.h
	${GCC} -c export.c ${GCC_EXTRA_FLAGS}

geom.o: geom.c geom.h global.h options.h parser.h
	${GCC} -c geom.c ${GCC_EXTRA_FLAGS}

gui_conf.o: gui_conf.c gui_conf.h global.h
	${GCC} -c gui_conf.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

gui_field.o: gui_field.c gui_field.h global.h
	${GCC} -c gui_field.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

gui_form.o: gui_form.c gui_form.h global.h header.xpm
	${GCC} -c gui_form.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

i18n.o: i18n.c i18n.h options.h global.h
	${GCC} -c i18n.c ${GUI_INC} ${GCC_EXTRA_FLAGS}
	
main.o: main.c geom.h global.h gui_field.h gui_form.h i18n.h options.h parser.h 
	${GCC} -c main.c ${GUI_INC} ${GCC_EXTRA_FLAGS}
	
options.o: options.c options.h global.h
	${GCC} -c options.c ${GCC_EXTRA_FLAGS}
	
parser.o: parser.c parser.h global.h options.h
	${GCC} -c parser.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

reproj.o: reproj.c reproj.h global.h options.h
	${GCC} -c reproj.c ${GUI_INC} ${GCC_EXTRA_FLAGS}

selections.o: selections.c selections.h global.h
	${GCC} -c selections.c ${GCC_EXTRA_FLAGS}

tools.o: tools.c tools.h global.h
	${GCC} -c tools.c ${GCC_EXTRA_FLAGS}

#############################################################################

test-platform: tests/test-platform.c
	${GCC} tests/test-platform.c i18n.o tools.o -o test-platform ${GCC_EXTRA_FLAGS} ${LD_EXTRA_FLAGS}

#############################################################################

translations:
	@ echo "Processing translation files..."
	@ mkdir -p ${I18N_LOCALE_DIR}
	@ xgettext -d ${I18N_PACKAGE} -s -k"_" -k"gettext_noop" -o ${I18N_LOCALE_DIR}/${I18N_PACKAGE}.pot *.c *.h	
	@ echo "Current locale: ${CUR_LOCALE}..."
	@ if [ -f "${I18N_LOCALE_DIR}/${CUR_LOCALE}.po" ] ; then \
		echo "Updating: ${CUR_LOCALE}..." ; \
		msgmerge --backup=simple -U ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po ${I18N_LOCALE_DIR}/${I18N_PACKAGE}.pot ; \
	else \
		echo "Creating: ${CUR_LOCALE}..." ; \
		msginit --no-translator --locale="${CUR_LOCALE}" -o ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po -i ${I18N_LOCALE_DIR}/${I18N_PACKAGE}.pot ; \
		awk '{sub(/charset=ASCII/,"charset=UTF-8")}; 1' ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po > ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po.tmp ; \
		mv ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po.tmp ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po ; \
	fi
	@ msgfmt --no-hash -c -o ${I18N_LOCALE_DIR}/${I18N_PACKAGE}.mo ${I18N_LOCALE_DIR}/${CUR_LOCALE}.po
	@ mkdir -p ${I18N_LOCALE_DIR}/${CUR_DIRNAME}
	@ mkdir -p ${I18N_LOCALE_DIR}/${CUR_DIRNAME}/LC_MESSAGES
	@ mv ${I18N_LOCALE_DIR}/${I18N_PACKAGE}.mo ${I18N_LOCALE_DIR}/${CUR_DIRNAME}/LC_MESSAGES/ 	
	@ echo "********************************************************************************"
	@ echo "* Check if ''Content-Type: text/plain; charset=UTF-8'' in the .po files.       *"
	@ echo "********************************************************************************"
	@ echo "Compiling source code..."	
	

#############################################################################

clean:
	rm -f *.o ${PRG}.exe
	rm -f *.h.gch
	rm -f test-platform.exe
	rm -f ${SLRE_DIR}/slre.o
	rm -f ${MULTCLIP_DIR}/*.o
	rm -f ${SHAPELIB_DIR}/*.o ${SHAPELIB_DIR}/*.exe ${SHAPELIB_DIR}/libshp.a
	@ cd ${PROJ4_DIR} ; ${MAKE} clean ; ${MAKE} uninstall
	rm -f ${PROJ4_DIR}/bin/*
	rm -rf ${PROJ4_DIR}/include
	rm -rf ${PROJ4_DIR}/lib/pkgconfig
	rm -f ${PROJ4_DIR}/lib/*
	rm -rf ${PROJ4_DIR}/share
	rm -rf proj
	rm -f config.h

#############################################################################


#############################################################################

install:
	@echo "Nothing left to do."
	@echo "Just run survey2gis from current directory."
	
#############################################################################
